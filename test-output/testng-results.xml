<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-16T19:33:36 IST" name="Default suite" finished-at="2025-10-16T19:33:36 IST" duration-ms="738">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:pom.runner.Run@609e8838]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-10-16T19:33:36 IST" name="Default test" finished-at="2025-10-16T19:33:36 IST" duration-ms="738">
      <class name="pom.runner.Run">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:pom.runner.Run@609e8838]" started-at="2025-10-16T19:33:36 IST" name="setUpClass" finished-at="2025-10-16T19:33:36 IST" duration-ms="501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7ff2b8d2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:pom.runner.Run@609e8838]" started-at="2025-10-16T19:33:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-10-16T19:33:36 IST" duration-ms="46" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["verify funcality of login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.core.exception.CucumberException">
            <message>
              <![CDATA[Could not create a cucumber expression for 'Enter{String} in Password Field.'.
It appears you did not register a parameter type.]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.core.exception.CucumberException: Could not create a cucumber expression for 'Enter{String} in Password Field.'.
It appears you did not register a parameter type.
at io.cucumber.core.stepexpression.StepExpressionFactory.registerTypeInConfiguration(StepExpressionFactory.java:99)
at io.cucumber.core.stepexpression.StepExpressionFactory.crateExpression(StepExpressionFactory.java:93)
at io.cucumber.core.stepexpression.StepExpressionFactory.createExpression(StepExpressionFactory.java:61)
at io.cucumber.core.stepexpression.StepExpressionFactory.createExpression(StepExpressionFactory.java:49)
at io.cucumber.core.runner.CachingGlue.lambda$prepareGlue$3(CachingGlue.java:308)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at io.cucumber.core.runner.CachingGlue.prepareGlue(CachingGlue.java:307)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:74)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:135)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: io.cucumber.cucumberexpressions.UndefinedParameterTypeException: This Cucumber Expression has a problem at column 6:

Enter{String} in Password Field.
     ^------^
Undefined parameter type 'String'.
Please register a ParameterType for 'String'
at io.cucumber.cucumberexpressions.UndefinedParameterTypeException.createUndefinedParameterType(UndefinedParameterTypeException.java:20)
at io.cucumber.cucumberexpressions.CucumberExpression.rewriteParameter(CucumberExpression.java:96)
at io.cucumber.cucumberexpressions.CucumberExpression.rewriteToRegex(CucumberExpression.java:54)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
at io.cucumber.cucumberexpressions.CucumberExpression.rewriteExpression(CucumberExpression.java:111)
at io.cucumber.cucumberexpressions.CucumberExpression.rewriteToRegex(CucumberExpression.java:56)
at io.cucumber.cucumberexpressions.CucumberExpression.<init>(CucumberExpression.java:39)
at io.cucumber.cucumberexpressions.ExpressionFactory.createExpression(ExpressionFactory.java:53)
at io.cucumber.core.stepexpression.StepExpressionFactory.crateExpression(StepExpressionFactory.java:88)
... 40 more
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.core.exception.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:pom.runner.Run@609e8838]" started-at="2025-10-16T19:33:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-10-16T19:33:36 IST" duration-ms="65" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["verify funcality of login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["login"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'user launch an chromebrowser' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("user launch an chromebrowser")
public void user_launch_an_chromebrowser() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("user navigate to practicetestautomation")
public void user_navigate_to_practicetestautomation() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Enter {string} in User NameField.")
public void enter_in_user_name_field(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Enter {string} in Password Field.")
public void enter_in_password_field(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User click on submit button.")
public void user_click_on_submit_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Verify User login or not by {string}.")
public void verify_user_login_or_not_by(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'user launch an chromebrowser' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("user launch an chromebrowser")
public void user_launch_an_chromebrowser() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("user navigate to practicetestautomation")
public void user_navigate_to_practicetestautomation() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Enter {string} in User NameField.")
public void enter_in_user_name_field(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Enter {string} in Password Field.")
public void enter_in_password_field(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User click on submit button.")
public void user_click_on_submit_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Verify User login or not by {string}.")
public void verify_user_login_or_not_by(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at ✽.user launch an chromebrowser(file:///C:/Users/irfan.wathare/eclipse-workspace/Automation/Features/Login.feature:5)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:pom.runner.Run@609e8838]" started-at="2025-10-16T19:33:36 IST" name="tearDownClass" finished-at="2025-10-16T19:33:36 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- pom.runner.Run -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
